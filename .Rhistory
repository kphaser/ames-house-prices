train_control <- trainControl(method="cv",number=5)
model <- train(SalePrice~.-Id, data=train, trControl=train_control, method="lm")
print(model)
model <- train(SalePrice~.-Id, data=train, trControl=train_control, method="lasso")
library(elasticnet)
install.packages("elasticnet")
model <- train(SalePrice~.-Id, data=train, trControl=train_control, method="lasso")
print(model)
model <- train(SalePrice~.-Id, data=train, trControl=train_control, method="rf")
print(model)
log(30159)
sapply(train,function(x) length(unique(x)))
summary(train)
plot(train$SalePrice,train$Utilities)
nearZeroVar(train,saveMetrics = TRUE)
summary(train)
hist(train$Street)
plot(train$Street)
rmse
install.packages("metrics")
install.packages("Metrics")
n <- dim(train)[1]
dim(train)
set.seed(123)
valid <- sample(n,round(n/4))
validsample <- sample(n,round(n/4))
valid <- train[valid,]
valid <- train[validsample,]
train <- train[-validsample,]
dim(valid)
dim(train)
365+1095
365/1460
removeVar
train[,list(Street,Alley,LandContour,Utilities,LandSlope,Condition2,RoofMat1,BsmtCond,BsmtFinType2,BsmtFinSF2,
Heating,LowQualFinSF,KitchenAbvGr,Functional,EnclosedPorch,X3SsnPorch,ScreenPorch,PoolArea,PoolQC,MiscFeature,MiscVal):=NULL]
class(train)
train <- as.data.table(train)
train[,list(Street,Alley,LandContour,Utilities,LandSlope,Condition2,RoofMat1,BsmtCond,BsmtFinType2,BsmtFinSF2,
Heating,LowQualFinSF,KitchenAbvGr,Functional,EnclosedPorch,X3SsnPorch,ScreenPorch,PoolArea,PoolQC,MiscFeature,MiscVal):=NULL]
str(train)
class(train)
train[,list(Street,Alley,LandContour,Utilities,LandSlope,Condition2,RoofMat1,BsmtCond,BsmtFinType2,BsmtFinSF2,
Heating,LowQualFinSF,KitchenAbvGr,Functional,EnclosedPorch,X3SsnPorch,ScreenPorch,PoolArea,PoolQC,MiscFeature,MiscVal):=NULL]
train[,list("Street",Alley,LandContour,Utilities,LandSlope,Condition2,RoofMat1,BsmtCond,BsmtFinType2,BsmtFinSF2,
Heating,LowQualFinSF,KitchenAbvGr,Functional,EnclosedPorch,X3SsnPorch,ScreenPorch,PoolArea,PoolQC,MiscFeature,MiscVal):=NULL]
train[,list(removeVar):=NULL]
removeVar <- c("Street","Alley","LandContour","Utilities","LandSlope","Condition2","RoofMat1","BsmtCond","BsmtFinType2","BsmtFinSF2",
"Heating","LowQualFinSF","KitchenAbvGr","Functional","EnclosedPorch","X3SsnPorch","ScreenPorch","PoolArea","PoolQC","MiscFeature","MiscVal")
train[,list(removeVar):=NULL]
train[,(removeVar):=NULL]
train[,(Street):=NULL]
train[,list(removeVar):=NULL]
train$Street
str(street)
str(train)
dim(train)
train[,MoSold:=NULL]
train[,(MoSold,SaleType:=NULL]
train[,(MoSold,SaleType):=NULL]
train[,.(MoSold,SaleType):=NULL]
train[,.(SalePrice,SaleType):=NULL]
train[,.(SaleCondition,SaleType):=NULL]
class(train)
str(train)
train[,list(SaleCondition,SaleType):=NULL]
train[,list("SaleCondition","SaleType"):=NULL]
train[,("SaleCondition","SaleType"):=NULL]
train[,(removeVar):=NULL,with=FALSE]
dim(train)
str(trai)
str(train)
test[,(removeVar):=NULL,with=FALSE]
test <- as.data.table(test)
test[,(removeVar):=NULL,with=FALSE]
dim(test)
train[,("OverallQual","FullBath"),with=FALSE]
train[,("OverallQual","FullBath")]
train[,list("OverallQual","FullBath")]
train[,list("OverallQual","FullBath"),with=FALSE]
train <- fread("data/train.csv")
str(train)
train <- fread("data/train.csv",stringsAsFactors=TRUE)
str(train)
test <- fread("data/test.csv",stringsAsFactors=TRUE)
class(train)
class(test)
ok_na <- c("Alley", "BsmtQual", "BsmtCond", "BsmtExposure", "BsmtFinType1",
"BsmtFinType2", "GarageType", "GarageFinish", "GarageQual",
"GarageCond", "PoolQC", "Fence", "MiscFeature")
addNoAnswer <- function(x){
if(is.factor(x)) return(factor(x, levels=c(levels(x), "None")))
return(x)
}
train[,(ok_na):=lapply(.SD,addNoAnswer),.SDcols=ok_na]
changeNA <- function (x) {
x[is.na(x)] <- "None"
return(x)
}
train[,(ok_na):=lapply(.SD,changeNA),.SDcols=ok_na]
summary(train)
cat_var <- names(train)[which(sapply(train, is.factor))]
num_var <- names(train)[which(sapply(train, is.numeric))]
train[,(cat_var) := lapply(.SD, as.factor), .SDcols = cat_var]
train_cat <- train[,.SD,.SDcols = cat_var]
train_num <- train[,.SD,.SDcols = num_var]
removeVar <- c("Street","Alley","LandContour","Utilities","LandSlope","Condition2","RoofMat1","BsmtCond","BsmtFinType2","BsmtFinSF2",
"Heating","LowQualFinSF","KitchenAbvGr","Functional","EnclosedPorch","X3SsnPorch","ScreenPorch","PoolArea","PoolQC","MiscFeature","MiscVal")
train[,(removeVar)]
train[,(removeVar),with=FALSE]
str(train)
nearZeroVar(train,saveMetrics = TRUE)
removeVar <- c("Street","Alley","LandContour","Utilities","LandSlope","Condition2","RoofMatl","BsmtCond","BsmtFinType2","BsmtFinSF2",
"Heating","LowQualFinSF","KitchenAbvGr","Functional","EnclosedPorch","3SsnPorch","ScreenPorch","PoolArea","PoolQC","MiscFeature","MiscVal")
train[],(removeVar),with=FALSE]
train[,(removeVar),with=FALSE]
train[,(removeVar):=NULL,with=FALSE]
test[,(removeVar):=NULL,with=FALSE]
length(removeVar)
dim(train)
dim(test)
anyNA(train)
summary(Train)
summary(train)
levels
levels(train$MSSubClass)
train$MSSubClass
str(Train)
str(train)
library(ProjectTemplate)
load.project()
library(ProjectTemplate)
load.project()
anyNA(trian)
anyNA(train)
anyNA(test)
n <- dim(train)[1]
set.seed(123)
valid.sample <- sample(n,round(n/4))
valid <- train[valid.sample,]
train <- train[-valid.sample,]
class(train)
class(test)
class(valid)
lmfit <- lm(SalePrice~.-Id,data=train)
levels(train$Electrical)
summary(train$Electrical)
summary(train)
summary(lmfit)
rmse
rmse(log(valid$SalePrice),log(pred))
pred <- predict(lmfit,newdata=valid)
rmse(log(valid$SalePrice),log(pred))
rfmod <- randomForest(SalePrice~.-Id,data=train)
pred <- predict(rfmod,newdata=valid)
rmse(log(valid$SalePrice),log(pred))
library(ProjectTemplate)
load.project()
str(train)
test[,(removeVar):=NULL,with=FALSE]
rfmod <- randomForest(SalePrice~.-Id,data=train)
pred <- predict(rfmod,newdata=valid)
rmse(log(valid$SalePrice),log(pred))
rfsubmit <- randomForest(SalePrice~.-Id,data=train_complete)
pred <- predict(rfsubmit,newdata=test)
str(train_complete)
dim(train_complete)
dim(test)
pred <- predict(rfsubmit,newdata=test)
summary(train_complete)
str(train_complete)
str(train)
rfsubmit
pred
pred <- predict(rfsubmit,newdata=test)
length(rfsubmit)
summary(train)
train_cat
summary(train_cat)
rm(list=ls())
train
train <- read.csv("data/train.csv")
test <- read.csv("data/test.csv")
train <- as.data.table(train)
test <- as.data.table(test)
summary(train)
ok_na <- c("Alley", "BsmtQual", "BsmtCond", "BsmtExposure", "BsmtFinType1",
"BsmtFinType2", "GarageType", "GarageFinish", "GarageQual",
"GarageCond", "PoolQC", "Fence", "MiscFeature")
addNoAnswer <- function(x){
if(is.factor(x)) return(factor(x, levels=c(levels(x), "None")))
return(x)
}
train[,(ok_na):=lapply(.SD,addNoAnswer),.SDcols=ok_na]
summary(trai)
summary(train)
train[,(ok_na):=lapply(.SD,changeNA),.SDcols=ok_na]
changeNA <- function (x) {
x[is.na(x)] <- "None"
return(x)
}
train[,(ok_na):=lapply(.SD,changeNA),.SDcols=ok_na]
summary(train)
cat_var <- names(train)[which(sapply(train, is.factor))]
num_var <- names(train)[which(sapply(train, is.numeric))]
cat_var
num_var
str(train)
change_var <- c("OverallQual","OverallCond","FullBath","TotRmsAbvGrd","Fireplaces","GarageCars","MoSold")
train[,(change_var):=lapply(.SD,as.factor),.SDcols=change_var]
str(train)
summary(train)
cat_var <- names(train)[which(sapply(train, is.factor))]
num_var <- names(train)[which(sapply(train, is.numeric))]
train[,(cat_var) := lapply(.SD, as.factor), .SDcols = cat_var]
str(train)
train_cat <- train[,.SD,.SDcols = cat_var]
train_num <- train[,.SD,.SDcols = num_var]
str(train_cat)
str(train_num)
removeVar <- c("Street","Alley","LandContour","Utilities","LandSlope","Condition2","RoofMatl","BsmtCond","BsmtFinType2","BsmtFinSF2",
"Heating","LowQualFinSF","KitchenAbvGr","Functional","EnclosedPorch","3SsnPorch","ScreenPorch","PoolArea","PoolQC","MiscFeature","MiscVal")
removeVar <- c("Street","Alley","LandContour","Utilities","LandSlope","Condition2","RoofMatl","BsmtCond","BsmtFinType2","BsmtFinSF2",
"Heating","LowQualFinSF","KitchenAbvGr","Functional","EnclosedPorch","3SsnPorch","ScreenPorch","PoolArea","PoolQC",
"MiscFeature","MiscVal")
train[,(removeVar):=NULL,with=FALSE]
train
rm(list=ls())
train <- read.csv("data/train.csv")
test <- read.csv("data/test.csv")
train <- as.data.table(train)
test <- as.data.table(test)
ok_na <- c("Alley", "BsmtQual", "BsmtCond", "BsmtExposure", "BsmtFinType1",
"BsmtFinType2", "GarageType", "GarageFinish", "GarageQual",
"GarageCond", "PoolQC", "Fence", "MiscFeature")
addNoAnswer <- function(x){
if(is.factor(x)) return(factor(x, levels=c(levels(x), "None")))
return(x)
}
train[,(ok_na):=lapply(.SD,addNoAnswer),.SDcols=ok_na]
train
summary(train)
changeNA <- function (x) {
x[is.na(x)] <- "None"
return(x)
}
train[,(ok_na):=lapply(.SD,changeNA),.SDcols=ok_na]
summary(Train)
summary(train)
change_var <- c("OverallQual","OverallCond","FullBath","TotRmsAbvGrd","Fireplaces","GarageCars","MoSold")
train[,(change_var):=lapply(.SD,as.factor),.SDcols=change_var]
str(train)
cat_var <- names(train)[which(sapply(train, is.factor))]
num_var <- names(train)[which(sapply(train, is.numeric))]
train[,(cat_var) := lapply(.SD, as.factor), .SDcols = cat_var]
train_cat <- train[,.SD,.SDcols = cat_var]
train_num <- train[,.SD,.SDcols = num_var]
str(train_cat)
levels(train$MSSubClass)
hist(train$MSSubClass)
removeVar <- c("Street","Alley","LandContour","Utilities","LandSlope","Condition2","RoofMatl","BsmtCond","BsmtFinType2","BsmtFinSF2",
"Heating","LowQualFinSF","KitchenAbvGr","Functional","EnclosedPorch","X3SsnPorch","ScreenPorch","PoolArea","PoolQC",
"MiscFeature","MiscVal")
train[,(removeVar):=NULL,with=FALSE]
str(train)
anyNA(train)
summary(train)
summary(test)
imp.train <- mice(train, m=3, method='cart', maxit=3, seed=123)
rm(list=ls())
train <- read.csv("data/train.csv")
test <- read.csv("data/test.csv")
train <- as.data.table(train)
test <- as.data.table(test)
ok_na <- c("Alley", "BsmtQual", "BsmtCond", "BsmtExposure", "BsmtFinType1",
"BsmtFinType2", "GarageType", "GarageFinish", "GarageQual",
"GarageCond", "PoolQC", "Fence", "MiscFeature")
addNoAnswer <- function(x){
if(is.factor(x)) return(factor(x, levels=c(levels(x), "None")))
return(x)
}
train[,(ok_na):=lapply(.SD,addNoAnswer),.SDcols=ok_na]
changeNA <- function (x) {
x[is.na(x)] <- "None"
return(x)
}
train[,(ok_na):=lapply(.SD,changeNA),.SDcols=ok_na]
change_var <- c("OverallQual","OverallCond","FullBath","TotRmsAbvGrd","Fireplaces","GarageCars","MoSold")
train[,(change_var):=lapply(.SD,as.factor),.SDcols=change_var]
cat_var <- names(train)[which(sapply(train, is.factor))]
num_var <- names(train)[which(sapply(train, is.numeric))]
train[,(cat_var) := lapply(.SD, as.factor), .SDcols = cat_var]
train_cat <- train[,.SD,.SDcols = cat_var]
train_num <- train[,.SD,.SDcols = num_var]
removeVar <- c("Street","Alley","LandContour","Utilities","LandSlope","Condition2","RoofMatl","BsmtCond","BsmtFinType2","BsmtFinSF2",
"Heating","LowQualFinSF","KitchenAbvGr","Functional","EnclosedPorch","X3SsnPorch","ScreenPorch","PoolArea","PoolQC",
"MiscFeature","MiscVal")
train[,(removeVar):=NULL,with=FALSE]
imp.train <- mice(train, m=3, method='cart', maxit=1, seed=123)
imp.train
train <- complete(imp.train)
train
class(train)
class(train_cat)
train_complete <- train
summary(train)
test[,(ok_na):=lapply(.SD,addNoAnswer),.SDcols=ok_na]
test[,(ok_na):=lapply(.SD,changeNA),.SDcols=ok_na]
cat_var2 <- names(test)[which(sapply(test, is.factor))]
num_var2 <- names(test)[which(sapply(test, is.numeric))]
test[,(change_var):=lapply(.SD,as.factor),.SDcols=change_var]
str(test)
cat_var2
test[,(cat_var2) := lapply(.SD, as.factor), .SDcols = cat_var2]
str(test)
summary(test$Street)
test[,(removeVar):=NULL,with=FALSE]
anyNA(test)
imp.test <- mice(test, m=3, method='cart', maxit=1, seed=123)
test <- complete(imp.test)
anyNA(test)
anyNA(train)
anyNA(test_complete)
anyNA(train_complete)
dim(train)[1]
dim(train_complete)[1]
n <- dim(train)[1]
set.seed(123)
valid.sample <- sample(n,round(n/4))
valid <- train[valid.sample,]
train <- train[-valid.sample,]
levels(train$Electrical)
levels(test$Electrical)
levels(train$MSSubClass)
levels(train$MSZoning)
levels(test$MSZoning)
list.factors
summary(train[is.factor(train)])
train[is.factor(train)]
train[is.factor(train),]
train[,is.factor(train)]
train[is.factor(train),with=FALSE]
levels(train$YearBuilt)
is.factor(train)
levels(train$SaleType)
levels(test$SaleType)
lmfit <- lm(SalePrice~.-Id,data=train)
summary(train)
pred <- predict(lmfit,newdata=valid)
rmse(log(valid$SalePrice),log(pred))
rfmod <- randomForest(SalePrice~.-Id,data=train)
pred <- predict(rfmod,newdata=valid)
rmse(log(valid$SalePrice),log(pred))
rfsubmit <- randomForest(SalePrice~.-Id,data=train_complete)
pred <- predict(rfsubmit,newdata=test)
levels(test$Utilities) <- levels(train$Utilities)
train$Utilities
levels(train$GarageQual)
levels(test$GarageQual)
levels(test$PoolQC)
levels(test$HouseStyle) <- levels(train$HouseStyle)
levels(test$RoofMatl) <- levels(train$RoofMatl)
levels(test$Exterior1st) <- levels(train$Exterior1st)
levels(test$Exterior2nd) <- levels(train$Exterior2nd)
# levels(test$Heating) <- levels(train$Heating)
levels(test$Electrical) <- levels(train$Electrical)
levels(test$GarageQual) <- levels(train$GarageQual)
set.seed(123)
valid.sample <- sample(n,round(n/4))
valid <- train[valid.sample,]
train <- train[-valid.sample,]
rfsubmit <- randomForest(SalePrice~.-Id,data=train_complete)
pred <- predict(rfsubmit,newdata=test)
levels(test$Electrical)
levels(train_complete$Electrical)
rfsubmit <- randomForest(SalePrice~.-Id,data=train_complete)
pred <- predict(rfsubmit,newdata=test)
colnames(test)
colnames(train_complete)
train_cat
summary(train_cat)
summary(train_complete)
levels(train_complete$Electrical)==levels(test$Electrical)
summary(test)
str(train_complete)
summary(train_complete)
summary(test)
levels(test$Exterior1st)
levels(train$Exterior1st)
levels(train$Exterior2nd)
levels(test$Exterior2nd)
levels(train$FullBath) <- levels(test$FullBath)
levels(train$FullBath)
levels(test$FullBath)
levels(train$GarageCars) <- levels(test$GarageCars)
levels(train$SaleType)
levels(test$SaleType)
rfsubmit <- randomForest(SalePrice~.-Id,data=train_complete)
pred <- predict(rfsubmit,newdata=test)
source('C:/Users/kphas_000/Dropbox/MSPA/PREDICT_413/Final/ames-housing-prices/munge/01-A.R', echo=TRUE)
rm(list=ls())
train <- read.csv("data/train.csv")
test <- read.csv("data/test.csv")
train <- as.data.table(train)
test <- as.data.table(test)
combi <- rbind(train,test)
train[,SalePrice:=NULL]
dim(train)
dim(test)
combi <- rbind(train,test)
class(combi)
ok_na <- c("Alley", "BsmtQual", "BsmtCond", "BsmtExposure", "BsmtFinType1",
"BsmtFinType2", "GarageType", "GarageFinish", "GarageQual",
"GarageCond", "PoolQC", "Fence", "MiscFeature")
addNoAnswer <- function(x){
if(is.factor(x)) return(factor(x, levels=c(levels(x), "None")))
return(x)
}
combi[,(ok_na):=lapply(.SD,addNoAnswer),.SDcols=ok_na]
changeNA <- function (x) {
x[is.na(x)] <- "None"
return(x)
}
combi[,(ok_na):=lapply(.SD,changeNA),.SDcols=ok_na]
summary(combi)
change_var <- c("OverallQual","OverallCond","FullBath","HalfBath","BedroomAbvGr","TotRmsAbvGrd","Fireplaces","GarageCars","MoSold")
combi[,(change_var):=lapply(.SD,as.factor),.SDcols=change_var]
str(combi)
anyNA(combi)
train
str(train)
removeVar <- c("Street","Alley","LandContour","Utilities","LandSlope","Condition2","RoofMatl","BsmtCond","BsmtFinType2","BsmtFinSF2",
"Heating","LowQualFinSF","KitchenAbvGr","Functional","EnclosedPorch","X3SsnPorch","ScreenPorch","PoolArea","PoolQC",
"MiscFeature","MiscVal")
combi[,(removeVar):=NULL,with=FALSE]
str(combi)
1460+1459
combi[1:1459,]
train <- combi[1:1460,]
train
test <- combi[-train,]
test <- combi[1461:2919,]
test
train <- cbind(y,train)
rm(list=ls())
train <- read.csv("data/train.csv")
test <- read.csv("data/test.csv")
train <- as.data.table(train)
test <- as.data.table(test)
y <- train$SalePrice # pull out label to be cbind back later
train[,SalePrice:=NULL]
combi <- rbind(train,test)
ok_na <- c("Alley", "BsmtQual", "BsmtCond", "BsmtExposure", "BsmtFinType1",
"BsmtFinType2", "GarageType", "GarageFinish", "GarageQual",
"GarageCond", "PoolQC", "Fence", "MiscFeature")
addNoAnswer <- function(x){
if(is.factor(x)) return(factor(x, levels=c(levels(x), "None")))
return(x)
}
combi[,(ok_na):=lapply(.SD,addNoAnswer),.SDcols=ok_na]
changeNA <- function (x) {
x[is.na(x)] <- "None"
return(x)
}
combi[,(ok_na):=lapply(.SD,changeNA),.SDcols=ok_na]
change_var <- c("OverallQual","OverallCond","FullBath","HalfBath","BedroomAbvGr","TotRmsAbvGrd","Fireplaces","GarageCars","MoSold")
combi[,(change_var):=lapply(.SD,as.factor),.SDcols=change_var]
removeVar <- c("Street","Alley","LandContour","Utilities","LandSlope","Condition2","RoofMatl","BsmtCond","BsmtFinType2","BsmtFinSF2",
"Heating","LowQualFinSF","KitchenAbvGr","Functional","EnclosedPorch","X3SsnPorch","ScreenPorch","PoolArea","PoolQC",
"MiscFeature","MiscVal")
combi[,(removeVar):=NULL,with=FALSE]
dim(combi)
str(combi)
train <- combi[1:1460,]
train <- cbind(y,train)
dim(train)
train
test <- combi[1461:2919,]
cat_var <- names(train)[which(sapply(train, is.factor))]
num_var <- names(train)[which(sapply(train, is.numeric))]
train_cat <- train[,.SD,.SDcols = cat_var]
train_num <- train[,.SD,.SDcols = num_var]
train_cat
dim(train_cat)
dim(train_num)
imp.train <- mice(train, m=3, method='cart', maxit=1, seed=123)
train <- complete(imp.train)
train_complete <- train
anyNA(train)
imp.test <- mice(test, m=3, method='cart', maxit=1, seed=123)
n <- dim(train)[1]
set.seed(123)
valid.sample <- sample(n,round(n/4))
valid <- train[valid.sample,]
train <- train[-valid.sample,]
valid
lmfit <- lm(SalePrice~.-Id,data=train)
lmfit <- lm(y~.-Id,data=train)
summary(lmfit)
pred <- predict(lmfit,newdata=valid)
rmse(log(valid$SalePrice),log(pred))
rfmod <- randomForest(y~.-Id,data=train)
pred <- predict(rfmod,newdata=valid)
rmse(log(valid$SalePrice),log(pred))
rmse(log(valid$y),log(pred))
rfsubmit <- randomForest(SalePrice~.-Id,data=train_complete)
rfsubmit <- randomForest(y~.-Id,data=train_complete)
pred <- predict(rfsubmit,newdata=test)
pred
results <- data.frame(Id=Test$Id,SalePrice=pred)
results <- data.frame(Id=test$Id,SalePrice=pred)
results
