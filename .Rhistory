rwf(reseasoned,drift=TRUE)
plot(rwf(reseasoned,drift=TRUE))
rm(list=ls())
require(fpp)
require(forecast)
require(fpp)
require(forecast)
plot(fancy)
plot(log(fancy))
install.packages("sparklyr")
library(sparklyr)
spark_install(version="1.6.2")
devtools::install_github("rstudio/sparklyr")
library(sparklyr)
sc <- spark_connect(master="local")
spark_install()
library(sparklyr)
sc <- spark_connect(master="local")
sc
library(dplyr)
iris_tbl <- copy_to(sc, iris)
flights_tbl <- copy_to(sc, nycflights13::flights, "flights")
batting_tbl <- copy_to(sc, Lahman::Batting, "batting")
install.packages("leaflet")
require(fpp)
require(forecast)
require(fpp)
require(forecast)
install.packages("knitr")
getwd()
library(data.table)
library(forecast)
source("updateR.R")
library(forecast)
library('ProjectTemplate')
getwd()
setwd("C:/Users/kphas_000/Dropbox/MSPA/PREDICT_413/Final/")
list.files()
create.project('ames-housing-prices')
list.files()
getwd()
setwd("./ames-housing-prices/")
getwd()
library(ProjectTemplate)
load.project()
head(train)
head(test)
nrow(train)
nrow(test)
str(train)
str(test)
plot(train$SalePrice)
head(train$YrSold)
pairs(train)
anyNA(train)
hist(train$SalePrice)
hist(log(train$SalePrice))
hist(log(train$SalePrice+1))
summary(train$SalePrice)
summary(train)
corrplot
corplot
summary(train)
str(train)
summary(train)
summary(train$LotFrontage,train$MasVnrType,train$MasVnrArea,train$BsmtFinSF1,train$BsmtFinSF2,train$Electrical,train$GarageYrBlt)
summary(c(train$LotFrontage,train$MasVnrType,train$MasVnrArea,train$BsmtFinSF1,train$BsmtFinSF2,train$Electrical,train$GarageYrBlt))
summary(train$LotFrontage,train$MasVnrType,train$MasVnrArea,train$BsmtFinSF1,train$BsmtFinSF2,train$Electrical,train$GarageYrBlt)
summary(train$LotFrontage)
summary(train$MasVnrType)
summary(train$MasVnrArea)
summary(train$BsmtFinSF1)
summary(train)
library(VIM)
dim(train)
nrow(train)
nrow(unique(train))
is.na(train)
train[,(cat_var) := lapply(.SD, as.factor), .SDcols = cat_var]
library(data.table)
train[,(cat_var) := lapply(.SD, as.factor), .SDcols = cat_var]
cat_var <- names(train)[which(sapply(train, is.character))]
cat_var
cat_car <- c(cat_var, 'BedroomAbvGr', 'HalfBath', ' KitchenAbvGr','BsmtFullBath', 'BsmtHalfBath', 'MSSubClass')
cat_car
boxplot(train$SalePrice,col="lightblue")
library(ggplot2)
library(data.table)
library(caret)
library(VIM)
library(mice)
library(rpart)
library(ProjectTemplate)
load.project()
head(train)
head(test)
nrow(train)
nrow(test)
str(train)
str(test)
dim(train)
summary(train)
str(train)
plot(train$SalePrice)
hist(train$SalePrice)
qqnorm(train$SalePrice)
qqline()
qqline(train$SalePrice)
hist(log(train$SalePrice+1))
boxplot(train$SalePrice,col="lightblue")
par(mfrow=c(1,2))
boxplot(train$SalePrice,col="lightblue")
boxplot(log(train$SalePrice+1),col="green")
par(mfrow=c(1,1))
boxplot(log(train$SalePrice+1),col="red")
par(mfrow=c(1,2))
boxplot(train$SalePrice,col="lightblue")
boxplot(log(train$SalePrice+1),col="red")
par(mfrow=c(1,1))
hist(train$SalePrice,"month")
hist(train$SalePrice,"year")
nrow(train)
nrow(unique(train))
cor(train)
cat_var <- names(train)[which(sapply(train, is.character))]
cat_var
which(sapply(train, is.character))
sapply(train, is.character)
str(train)
is.character(train)
is.factor(train)
is.fac
is.factor
is.factor(train)
which(sapply(train, is.factor))
which(sapply(train, is.numeric))
summary(train$MSSubClass)
head(train$MSSubClass,100)
cat_var <- names(train)[which(sapply(train, is.factor))]
cat_var
cat_car <- c(cat_var, 'BedroomAbvGr', 'HalfBath', ' KitchenAbvGr','BsmtFullBath', 'BsmtHalfBath', 'MSSubClass')
cat_car
cat_col <- names(train)[which(sapply(train, is.factor))]
cat_var <- c(cat_col, 'BedroomAbvGr', 'HalfBath', ' KitchenAbvGr','BsmtFullBath', 'BsmtHalfBath', 'MSSubClass')
numeric_var <- names(train)[which(sapply(train, is.numeric))]
num_var <- names(train)[which(sapply(train, is.numeric))]
num_var
any(num_var=cat_var)
any(num_var==cat_var)
num_var==cat_var
train_cat <- train[,.SD, .SDcols = cat_var]
train_cont <- train[,.SD,.SDcols = num_var]
train[,.SD]
summary(train[,.SD, .SDcols =numeric_var])
summary(train[,.SD, .SDcols =num_var])
library(data.table)
summary(train[,.SD, .SDcols =num_var])
num_var
cat_var
summary(train[,.SD, num_var])
summary(train[,.SD, by=num_var])
summary(train[,.SD, .SDcols = num_var])
colSums(sapply(train, is.na))
summary(train[,.SD,.SDcols = num_var])
?cor
library(corrplot)
doPlots
?doPlots
library(ggplot2)
library(dplyr)
library(data.table)
library(corrplot)
library(caret)
library(VIM)
library(mice)
library(rpart)
library(ProjectTemplate)
load.project()
train
names(train)
levels
levels(train$Alley)
levels(train$BsmtQual)
summary(train)
No
which(train$Alley=="NA")
which(train$Alley==NA)
?which
train[Alley,Alley=="NA",]
train[,Alley=="NA",]
train[,,]
?data.table
train[Alley=="NA"]
train <- data.table(train)
train
train[Alley=="NA"]
train[Alley==NA]
levels(train$Alley)
which(train$Alley=="NA")
which(train$Alley==NA)
head(train$Alley,100)
head(train)
train$Alley[is.na(train$Alley)]
train$Alley[is.na(train$Alley)] <- "No"
is.na(train$Alley)
which(is.na(train$Alley))
train[is.na(train$Alley)]
train$Alley[is.na(train$Alley)]
train[-1]
addNoAnswer <- function(x){
if(is.factor(x)) return(factor(x, levels=c(levels(x), "None")))
return(x)
}
addNoAnswer(train$Alley)
train$Alley[is.na(train$Alley)] <- "None"
train$Alley[is.na(train$Alley)]
library(forcats)
install.packages(forcats)
install.packages("forcats")
library(forcats)
fct_explicit_na(train$Alley)
?fct_explicit_na
train$Alley[is.na(train$Alley)]
addNoneLevel <- function(x){
if(is.factor(x)) return(factor(x, levels=c(levels(x), "None")))
return(x)
}
train$Alley2 <- addNoneLevel(train$Alley)
train$Alley2
train$Alley2[is.na(train$Alley2)] <- "None"
train$Alley2
str(train$Alley2)
addNoneLevel(train$BsmtQual)
?Factor
?factor
addLevel <- function(x,y){
if(is.factor(x)) return(factor(x, levels=c(levels(x), y)))
return(x)
}
addLevel(train$Alley,"None")
addLevel(train$Alley,None)
addLevel <- function(x,y){
if(is.factor(x)) return(factor(x, levels=c(levels(x), "y")))
return(x)
}
addLevel(train$Alley,None)
addNoneLevel <- function(x){
if(is.factor(x)) return(factor(x, levels=c(levels(x), "None")))
return(x)
}
for (col in )
train$Alley2 <- addNoneLevel(train$Alley)
train$Alley2[is.na(train$Alley2)] <- "None"
train$Alley2
levels(train$Alley2)
okNA <- c("Alley", "BsmtQual", "BsmtCond", "BsmtExposure", "BsmtFinType1", "BsmtFinType2", "GarageType", "GarageFinish", "GarageQual", "GarageCond", "PoolQC", "Fence", "MiscFeature")
train$Alley[is.na(train$Alley)]
addNoneLevel <- function(x){
if(is.factor(x)) return(factor(x, levels=c(levels(x), "None")))
return(x)
}
test
for (col in okNA) {
train$col <- addNoneLevel(train$col)
train$col[is.na(train$col)] <- "None"
}
for (col in okNA)
{}
ok_na <- c(Alley, BsmtQual, BsmtCond, BsmtExposure, BsmtFinType1, BsmtFinType2, GarageType, GarageFinish, GarageQual, GarageCond, PoolQC, Fence, MiscFeature)
okNA
names(okNA)
ok_na <- c(train$Alley, train$BsmtQual, BsmtCond, BsmtExposure, BsmtFinType1, BsmtFinType2, GarageType, GarageFinish, GarageQual, GarageCond, PoolQC, Fence, MiscFeature)
ok_na <- c(train$Alley, train$BsmtQual, train$BsmtCond, train$BsmtExposure, train$BsmtFinType1, train$BsmtFinType2,
train$GarageType, train$GarageFinish, train$GarageQual, train$GarageCond, train$PoolQC, train$Fence, train$MiscFeature)
ok_na
ok_na[1]
ok_na[,1]
dim(ok_na)
head(ok_na)
apply(train[,okNA],2,addNoneLevel)
train[,okNA]
train
train[okNA]
train[,okNA]
train[,okNA,]
apply(train[,okNA],1,addNoneLevel)
apply(train[,okNA],2,function(x) {if(is.factor(x)) return(factor(x, levels=c(levels(x), "None")))})
dim(train[,okNA])
train[,c("Alley")]
train[c("Alley","Fence")]
train[,c(Alley,Fence)]
train[Fence]
train[,Fence]
rm(data.table)
addNoneLevel
train[,.(Alley,Fence)]
train[,list(Alley,Fence)]
train[,list(okNA)]
train[,.(okNA)]
train[,.SD,.SDcols=c(1:2)]
train[,okNA,with=FALSE]
apply(train[,okNA,with=FALSE],2,addNoneLevel})
apply(train[,okNA,with=FALSE],2,addNoneLevel)
train[,okNA,with=FALSE]
x <- apply(train[,okNA,with=FALSE],2,addNoneLevel)
x
x[,,with=FALSE]
train[,okNA,with=FALSE]
sapply(train[,okNA,with=FALSE],addNoneLevel)
colwise
library(plur)
library(plyr)
colwise
colwise(addNoneLevel)(train[,okNA,with=FALSE])
levels(train$GarageType)
levels(train$GarageFinish)
colwise(addNoneLevel)(train[,okNA,with=FALSE])
addNoneLevel(train$GarageType)
head(train$GarageType)
addNoneLevel <- function(x){
if(is.factor(x)) return(factor(x, levels=c(levels(x), "None")))
x <- x
return(x)
}
addNoneLevel(train$GarageType)
levels(train$GarageType)
levels(train$Alley)
levels(train$Alley) <- c(levels(train$Alley),"None")
levels(train$Alley)
head(train$Alley)
train$Alley[is.na(train$Alley)] <- "None"
head(train$Alley)
class(train$Alley)
hello <- c(a,b,c)
levels(train$Alley)
library(ProjectTemplate)
load.project()
search()
train[,]
train
test
library(ProjectTemplate)
load.project()
as.data.table
?as.data.table
library(data.table)
as.data.table
library(ProjectTemplate)
load.project()
train
anyNA(train)
colSums(sapply(train, is.na))
colSums(sapply(train[,.SD, .SDcols = cat_var], is.na))
anyNA(train)
cat_col <- names(train)[which(sapply(train, is.factor))]
cat_var <- c(cat_col, 'BedroomAbvGr', 'HalfBath', 'KitchenAbvGr','BsmtFullBath', 'BsmtHalfBath', 'MSSubClass')
num_var <- names(train)[which(sapply(train, is.numeric))]
colSums(sapply(train, is.na))
colSums(sapply(train[,.SD, .SDcols = cat_var], is.na))
plot(train$SalePrice)
hist(train$SalePrice)
qqnorm(train$SalePrice)
qqline(train$SalePrice)
hist(log(train$SalePrice+1))
par(mfrow=c(1,2))
boxplot(train$SalePrice,col="lightblue")
boxplot(log(train$SalePrice+1),col="red")
par(mfrow=c(1,1))
hist(train$SalePrice,"month")
hist(train$SalePrice,"year")
summary(train[,.SD,.SDcols = num_var])
table(train[,.SD,.SDcols = cat_var])
train_cat <- train[,.SD,.SDcols = cat_var]
train_cont <- train[,.SD,.SDcols = num_var]
train_cat
train_cont
table(train[,.SD,.SDcols = cat_var])
sum(train[,'YearRemodAdd', with = FALSE] != train[,'YearBuilt', with = FALSE])
train %>% select(YearBuilt, YearRemodAdd) %>%    mutate(Remodeled = as.integer(YearBuilt != YearRemodAdd)) %>% ggplot(aes(x= factor(x = Remodeled, labels = c( 'No','Yes')))) + geom_bar() + xlab('Remodeled') + theme_light()
str(train_cat)
train[,(cat_var) := lapply(.SD, as.factor), .SDcols = cat_var]
train_cat <- train[,.SD,.SDcols = cat_var]
train_cont <- train[,.SD,.SDcols = num_var]
str(train_cat)
str(train_cont)
cor(train_cont)
?cor
pairs(train_cont)
?pairs
corr
cor
cor(train$SalePrice,train_cont)
str(train_cont)
cat_col
num_var
any(num_var==cat_var)
library(ProjectTemplate)
load.project()
train
test
train_cat
train_cont
ncol
ncol(train_cat)
ncol(train_cont)
train_cat
str(train_cat)
str(train_cont)
cat_col
str(train)
colnames
any(colnames(train_cont)==colnames(train_cat))
any(colnames(train_cont)=colnames(train_cat))
str(train_cont)
num_var
cat_var
length(cat_var)
length(num_var)
duplicates(cat_var,num_var)
duplicate(cat_var,num_var)
duplicated(cat_var,num_var)
ncol(train)
cat_col
length(cat_col)
which(sapply(train, is.numeric))
which(sapply(train, is.factor))
length(which(sapply(train, is.factor)))
length(which(sapply(train, is.numeric)))
num_var
str(num_var)
str(train)
?is.numeric
is.numeric(train$HalfBath)
is.numeric(train$SalePrice)
cat_col <- names(train)[which(sapply(train, is.factor))]
cat_var <- c(cat_col, 'BedroomAbvGr', 'HalfBath', 'KitchenAbvGr','BsmtFullBath', 'BsmtHalfBath', 'MSSubClass')
num_var <- names(train)[which(sapply(train, is.numeric))]
cat_var
length(cat_var)
which(sapply(train,is.numeric))
length(which(sapply(train,is.numeric)))
length(which(sapply(train,is.factor)))
length(num_var)
num_var
train[,(cat_var) := lapply(.SD, as.factor), .SDcols = cat_var]
rm(list=ls())
library(ProjectTemplate)
load.project()
train
test
train_cont
rm(cat_col)
rm(cat_var)
rm(num_var)
rm(train_cont)
rm(train_cat)
cat_col <- names(train)[which(sapply(train, is.factor))]
length(cat_col)
cat_col
length(which(sapply(train,is.factor)))
length(which(sapply(train,is.numeri)))
length(which(sapply(train,is.numeric)))
cat_var <- c(cat_col, 'BedroomAbvGr', 'HalfBath', 'KitchenAbvGr','BsmtFullBath', 'BsmtHalfBath', 'MSSubClass')
length(cat_var)
num_var <- names(train)[which(sapply(train, is.numeric))]
num_var
length(num_var)
str(train)
ncols(which(sapply(train,is.factor)))
ncol(which(sapply(train,is.factor)))
train[,(cat_var) := lapply(.SD, as.factor), .SDcols = cat_var]
str()cat_var
cat_var
cat_col
str(train)
summary(train)
sapply(train,function(x) length(unique(x)))
nearZeroVar(train,saveMetrics = T)
?nearZeroVar
sapply(train,function(x) length(unique(x)))
train
test
nrow(train)
nrow(unique(train))
nrow(train) - nrow(unique(train))
colSums(sapply(train, is.na))
colSums(sapply(train[,.SD, .SDcols = cat_var], is.na))
train %>% select(YearBuilt, YearRemodAdd) %>%    mutate(Remodeled = as.integer(YearBuilt != YearRemodAdd)) %>% ggplot(aes(x= factor(x = Remodeled, labels = c( 'No','Yes')))) + geom_bar() + xlab('Remodeled') + theme_light()
sum(train[,'YearRemodAdd', with = FALSE] != train[,'YearBuilt', with = FALSE])
summary(train[,.SD,.SDcols = num_var])
table(train[,.SD,.SDcols = cat_var])
cor(train_cont,na.rm=TRUE)
cor(train_cont)
rm(c(cat_col,cat_var,num_var))
rm(cat_vol)
library(ProjectTemplate)
load.project()
cat_col
cat_var
num_var
str(train)
summary(train$BsmtFinSF2)
train$MSSubClass
str(train)
train[,.(OverallQual,OverallCond,FullBath,TotRmsAbvGrd,Fireplaces,GarageCars,MoSold) := lapply(.SD,as.factor)]
train[,list(OverallQual,OverallCond,FullBath,TotRmsAbvGrd,Fireplaces,GarageCars,MoSold)]
train[,lapply(.SD,as.factor),by=c((OverallQual,OverallCond,FullBath,TotRmsAbvGrd,Fireplaces,GarageCars,MoSold))]
train[,lapply(.SD,as.factor),by=c(OverallQual,OverallCond,FullBath,TotRmsAbvGrd,Fireplaces,GarageCars,MoSold)]
train$OverallQual
change_var <- c("OverallQual","OverallCond","FullBath","TotRmsAbvGrd","Fireplaces","GarageCars","MoSold")
train[,(change_var):=lapply(.SD,as.factor),.SDcols=change_var]
str(train)
